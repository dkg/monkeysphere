# The monkeysphere web site is launched! #

dkg registered monkeysphere.info and monkesphereproject.net (due to the
failure of Chase to implement the monkeysphere, they were not able to properly
verify my credit card number). 

And ... they are both now resolving to an actual real web site.

I just took the following steps to put the web site in place (skip to the
bottom to see what this all means if you want to modify the web site):

 * Created a new subdirectory of my git repo: website

 * Copied the default files for setting up an ikiwiki software project into
 this repository. 

 * I deleted the contact page, Makefile (for generating a html
 doc directory for the project), and documentation page. I'm not opposed to
 these pages, I was just in a hurry to get something published and wasn't sure
 what to do with these files. We can always add them later.

 * I edited the remaining files to reflect the project (as best I could).

 * I created a user and web directory on the same server as my published
 monkeysphere git repository. 
 
 * I created a clone of my monkeysphere git repository owned by this new user.

 * I created an ikiwiki setup file that:
  * Specifies the clone as the "srcdir" 

  * Specifies my new web directory as the web directory

  * Generates a setuid binary, owned by the web directory owner, that will
		update the src repo and re-generate the web pages. 

 * In my published git repo, I added this setuid binary file to my
 post-update script so that when I push to my git repo, it will trigger
 ikiwiki to auto-generate the html 

What does this all means if you want to edit the web site?

At the moment, we're betraying our all-distributed, all-the-time mode of
operations. I'm acting as the web manager (kinda like a release manager). 

That means that if you want a web site change, you should publish it to your
git repo and then let me know. Then, I pull in your change and push it to my
published repo which in turn pushes it to the web site.

Also - of note - web edits are not allowed, although that's technically
possible with ikiwiki. 

In general, I'm going with simplicity first - we can get more fancy later. 

Oh... the files are written in the markdown language, which is ikiwiki default
(http://daringfireball.net/projects/markdown/syntax).

