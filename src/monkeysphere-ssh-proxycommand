#!/bin/bash

# monkeysphere-ssh-proxycommand: MonkeySphere ssh ProxyCommand hook
#
# The monkeysphere scripts are written by:
# Jameson Rollins <jrollins@fifthhorseman.net>
#
# They are Copyright 2008, and are all released under the GPL, version 3
# or later.

# This is meant to be run as an ssh ProxyCommand to initiate a
# monkeysphere known_hosts update before an ssh connection to host is
# established.  Can be added to ~/.ssh/config as follows:
#  ProxyCommand monkeysphere-ssh-proxycommand %h %p

########################################################################

usage() {
cat <<EOF >&2
usage: ssh -o ProxyCommand="$(basename $0) %h %p" ...
EOF
}

########################################################################

# export the monkeysphere log level
export MONKEYSPHERE_LOG_LEVEL

if [ "$1" = '--no-connect' ] ; then
    NO_CONNECT='true'
    shift 1
fi

HOST="$1"
PORT="$2"

if [ -z "$HOST" ] ; then
    echo "Host not specified." >&2
    usage
    exit 255
fi
if [ -z "$PORT" ] ; then
    PORT=22
fi

# set the host URI
if [ "$PORT" != '22' ] ; then
    HOSTP="${HOST}:${PORT}"
else
    HOSTP="${HOST}"
fi
URI="ssh://${HOSTP}"

# specify keyserver checking.  the behavior of this proxy command is
# intentionally different than that of running monkeyesphere normally,
# and keyserver checking is intentionally done under certain
# circumstances.  This can be overridden by setting the
# MONKEYSPHERE_CHECK_KEYSERVER environment variable.

# if the host is in the gpg keyring...
if gpg --list-key ="${URI}" 2>&1 >/dev/null ; then
    # do not check the keyserver
    CHECK_KEYSERVER="false"

# if the host is NOT in the keyring...
else
    # if the host key is found in the known_hosts file...
    # FIXME: this only works for default known_hosts location
    hostKey=$(ssh-keygen -F "$HOST" 2>/dev/null)

    if [ "$hostKey" ] ; then
	# do not check the keyserver
	# FIXME: more nuanced checking should be done here to properly
	# take into consideration hosts that join monkeysphere by
	# converting an existing and known ssh key
	CHECK_KEYSERVER="false"

    # if the host key is not found in the known_hosts file...
    else
	# check the keyserver
	CHECK_KEYSERVER="true"
    fi
fi
# set and export the variable for use by monkeysphere
MONKEYSPHERE_CHECK_KEYSERVER=${MONKEYSPHERE_CHECK_KEYSERVER:="$CHECK_KEYSERVER"}
export MONKEYSPHERE_CHECK_KEYSERVER

# update the known_hosts file for the host
monkeysphere update-known_hosts "$HOSTP"

# exec a netcat passthrough to host for the ssh connection
if [ -z "$NO_CONNECT" ] ; then
    if (which nc 2>/dev/null >/dev/null); then
	exec nc "$HOST" "$PORT"
    elif (which socat 2>/dev/null >/dev/null); then
	exec socat STDIO "TCP:$HOST:$PORT"
    else
	echo "Neither netcat nor socat found -- could not complete monkeysphere-ssh-proxycommand connection to $HOST:$PORT" >&2
	exit 255
    fi
fi
